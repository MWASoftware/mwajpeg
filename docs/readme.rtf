{\rtf1\ansi\ansicpg1252\deff0\deflang2057\deflangfe2057{\fonttbl{\f0\fswiss\fprq2\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue0;}
{\*\generator Msftedit 5.41.15.1507;}\viewkind4\uc1\pard\nowidctlpar\qc\cf1\b\f0\fs32 MWA JPEG Component Library\par
\pard\nowidctlpar\cf0\b0\fs20\par
Welcome to the MWA JPEG Component Library. \cf1 The JPEG Component Library provides two additional non-visual components for use under either Delphi or C++Builder. It also provides a Data Aware JPEG Image component which may be used to save and access JPEG encoded images in a database blob field. A corresponding printable component is also provided so that you may print images from a database using Quick Reports. \par
\par
The two non-visual components are TJPEGFileCompressor and TJPEGFileDecompressor. These support compression of images to JPEG Format and decompression respectively, and their properties allow full control of the JPEG algorithm. The data aware component is TDBJPEGImage, and the printable component is TQRDBJPEGImage (for Delphi 2005 and later only available if you also have Quick Reports 4 installed). You will find these components on the "MWA JPEG" tab on the component palette.\par
\par
Simply installing these components JPEG enables the Delphi IDE. The components register themselves as supporting .jpg files and the JPEG compression format and, when you come to load an image into a TImage Picture, the JPEG format will be found amongst the list of supported file formats. An image loaded from a JPEG source can also be saved back to JPEG. These components support the JPEG File Interchange Format (JFIF).\par
\par
These two components also support TImage at run-time too. As at design time, if TJPEGFileDecompressor is included in your project, then calling TImage.Picture.LoadFromFile when the file extension is .jpg will automatically invoke the JPEG decompressor. You can also explicitly call TJPEGFileDecompressor to load a JPEG image from any file.\par
\par
TJPEGFileCompressor can be used to save a TImage.Picture in JPEG format, and can handle pictures that are either bitmaps or metafiles. It can also compress a device independent bitmap, and change the size of bitmaps before compression.\par
\par
TDBJPEGImage is linked to a database blob field and also uses TJPEGFileDecompressor and TJPEGFileCompressor to save and load JPEG encoded images from the Blob Field. Use of the JPEG compressor and decompressor components can be implicit if the default parameter settings are sufficient. On the other hand, the reference may be explicit to copies of these components with non-default parameter settings. TQRDBJPEGImage can be used to print a JPEG Image using Quick Reports. \par
\par
This software uses original software for JPEG developed by the Independent JPEG Group (see ftp://ftp.uu.net/graphics/jpeg). The IDG have made available a library of generic 'C' code supporting JPEG compression and decompression and have permitted its free use provided the source is acknowledged. The IDG code has been modified for use with Delphi and MS Windows and is provided as compiled object files. Optionally, they may be separately compiled into a dll.\par
\par
An interface to this software is provided by the unit \i jpeglib.pas\i0 . This is encapsulated as a set of Delphi components in the unit \i mwajpeg.pas\i0 , which also supports the mapping of the environment independent image format expected by the IJG code into MS Windows bitmap and metafile formats.\par
\par
When you purchase a licence to this product, you purchase a licence for the source code to the mwajpeg and jpeglib units and the right to include binaries derived from them in your own products without having to pay additional royalties. Support is provided by our online Forum at http://www.mwasoftware.co.uk.\par
\par
\b\fs24 Installation\par
\par
\b0\fs20 Installation is fully automated. The installer will detect each supported version of Delphi and C++Builder installed on your system and offer to install the JPEG Components for each one. You may deselect installation for any supported version of Delphi and C++Builder in the customisation dialog. The installer will also install the example applications and help file in your Personal Folder. You can also modify this in the customisation dialog. In the full version, the source files will also be installed here.\par
\par
The evaluation version is fully functional except that any programs you create with it will only function when the Delphi or C++Builder IDE is also active.\par
\par
\b\fs24 After Installation\b0\fs20\par
\par
Once installation is complete, the MWA JPEG components will have been added to each selected version of Delphi and C++Builder. The supporting .dcu (and .obj) files will have been installed in the "lib" folder and, for C++Builder, the hpp files will be installed in the "include" folder. A design time package will have been installed in the "bin" folder.\par
\b\fs24\par
Example Applications\b0\fs20\par
\par
Three demo applications are provided. A JPEG Viewer application demonstrates the opening and saving of JPEG image files and conversion to and from bitmap files (.bmp) and from Windows Metafiles (.wmf). One database application (DBDemo) demonstrates use of the data aware component with the DB Navigation bar, while another (DBGrDemo) demonstrates the use of the data aware component in a TDBCtrlGrid.\par
\par
The JPEG Viewer application may be found in the Examples\\Viewer folder. To activate, load the jpegdemo.dpr file into the IDE using the File|Open Project menu item. This provides a simple application that can open and save .jpg (JPEG), .bmp (Windows Bitmap) and .wmf (Windows metfaile) files, and copy and paste bitmaps and metafiles to and from the clipboard. To test out, simply compile and run the application.\par
\par
To load and view a JPEG file, click on the open button and load the test.jpg file contained in the subdirectory created above. You can also try saving it to another file name (you can save it as either a JPEG or a bitmap). You can also use the demo application to convert windows bitmaps and metafiles to jpegs simply by opening the file containing them (or pasting from the clipboard) and saving them as jpegs. The viewer window can also be resized by simply dragging the bottom right hand corner with the mouse. Saving the image will save it at the new size.\par
\par
The application also demonstrates a simple method for printing a JPEG Image.\par
\par
You can also use the Object Inspector to see the properties published by the two JPEG components.\par
\par
The JPEG database applications may be found in the Examples\\db folder. To activate, load the respective .dpr file into the IDE using the File|Open Project menu item.\par
\par
The DBDemo application is an extension of the Viewer and presents images held in an example database. The database records may be perused using the DBNavigator bar provided. It is still possible to save images from the database record and to replace/insert images from files or the clipboard. The application also demonstrates how to print a report including JPEG Images.\par
\par
The DBGrDemo application uses the same image database but presents the images using a TDBCtrlGrid which enables them to be viewed as an image strip.\par
\par
\b\fs24 More Information\cf0\b0\fs20\par
\par
An Online Help File is installed and may be found under the Programs->MWA JPEG Component Library Start Menu. An online form is also available at http://www.mwasoftware.co.uk.\par
\par
\cf1\b\fs24 Licensing\cf0\b0\fs20\par
\par
If you are evaluating this product then you have an evaluation licence for 30 days. Please see the licence agreement for more information. If you wish to continue to use the software after this time then you must purchase a source licence from MWA Software - see http://www.mwasoftware.co.uk for more information.\par
\par
If you have purchased this product then Thank You! Your licence allows you full access to the source code and royalty free deployment. However, you must keep the source code confidential and not give it to third parties.\par
\par
\cf1\b\fs24 What's New in This Version\cf0\b0\fs20\par
\par
New In Version 1.10\par
\par
1. Support for CMYK Jpeg Images\par
\par
New in Version 1.9\par
\par
1. Support for Delphi 2005 (Win32)\par
\par
2. Support for Borland Developer Studio 2006 (both Delphi and C++Builder Win32)\par
\par
3. Support for Delphi 2007.\par
\par
New features in release 1.8b\par
\par
1. C++Builder Support has been added.\par
\par
New Features in Version 1.8a\par
\par
1. Delphi 7 support has been added\par
\par
1. To support Interbase Express, LoadPicture now also checks the JPEG image field's Blobsize.\par
\par
2. Support for Delphi 6 has now been added.\par
\par
3. Version 6b of the IJG software is now used.\par
\par
New Features in version 1.7\par
\par
1. Support for C++Builder 5 has been added.\par
\par
2. With Delphi 3 or later, TJpegDecompressor.ReadBitmap now returns a DIB bitmap  rather than a Device Dependent Bitmap. This is for improved and more reliable  printing. Earlier verions of Delpbi and C++Builder 1 do not support DIB bitmaps.  The Viewer example program has been amended to demonstrate this new feature.\par
\par
New Features in version 1.6\par
\par
1. Support for C++Builder 4 has been added.\par
\par
2. The memory leak in LoadPictureFromStream is now fixed.\par
\par
3. Support for TDBCtrlGrid has been added to TDBJPEGImage, and a demo application provided to illustrate this.\par
\par
4. References to TBlobstream in TDBJPEGImage have been replaced with calls to the more generic TDataSet.CreateBlobStream. This should permit operation with 3rd party database components.\par
\par
5. If an error occurs during the decompression of a jpeg image from TImage.Picture.LoadFromFile, the next call to the JPEG Decompressor should no longer \par
risk an Access Violation.\par
\par
6. If an exception occurs during the processing of a progress report, Abort is now called to reset the JPEG decompressor/compressor. This will avoid the "JPEG decompressor/compressor not in correct state error messages on subsequent calls to the jpeg code.\par
\par
New Features in Version 1.5\par
\par
1. This release is primarily for Delphi 4 support and to ensure a common software base is maintained.\par
\par
2. Two new methods "LoadPictureFromResource" and "LoadPictureFromResID" are provided so that JPEG images can be packaged with a program as \par
resources and then loaded at run-time. This can save considerable space compared with loading an image into TImage at run-time. See the help for \par
information on how to use this feature and the Viewer Demo application, which includes a JPEG resource in its about box.\par
\par
3. The Delphi 3 version should now install into the IDE without generating a "A Device Attached to the System is not Working" error \par
message. This was due to the components having been compiled on a system with Quick Reports Professional installed. This error message was \par
experienced by users that used the standard version shipped by Borland.\par
\par
New features in Version 1.4:\par
\par
1. Support for C++Builder 3.0. The component library now also supports C++Builder 3.0. The functionality is identical to the other versions \par
and a common source base is still maintained.\par
\par
2. No DLL required for Delphi 3, and all versions of C++Builder. Version 1.3 required a separate dll for the JPEG compression software. \par
This is no longer true for Delphi 3 and C++Builder. By default the JPEG software is linked into your program - dll support is still available as a command line option.\par
\par
3. Dynamic dll loading. The Delphi 1 and Delphi 2 versions now load the JPEG dll dynamically. This enables a more meaningful error message \par
to be returned if the library cannot be found. The version 1.3 static load is still available as an option.\par
\par
4. A new visual component - TDBJPEGImage has been provided. This is a data aware descendant of TImage that stores images in a database blob \par
field using JPEG compression.\par
\par
5. Quick Reports support: with Quick Reports version 1, the TDBJPEGImage may be included on a report. For version 2, a new \par
component TQRJPEGImage is provided so that you can print JPEG images direct from a database.\par
\par
\cf1\b\fs24 Bug Fixes:\cf0\b0\fs20\par
\par
1. Parameters to TStream.Seek in TJPEGCompressor.SkipInputBytes now the correct way round :(    Why didn't Borland make the "ORigin" \par
parameter an enumerated type then this typo would have been a compile time error!\par
\par
2. The error code returned from PlayEnhMetaFile is now returned in the error messsage\par
\par
3. The decompressor now has a property (ColoursIn8bitMode) that allows the user to  specify the actual numbers of discrete colours in the \par
image when decoding to a 256 colour image. This used to be 256. However, a lower number can avoid a colour cast especially with Blank \par
and White images encoded as full colour images. The default is now 64.\par
\par
4. When the buffer size is changed the buffer will now be freed and reallocated.\par
\par
5. An event handler for warning messages has been added.\par
\par
6. You should now be able to correctly save JPEG images when working in the IDE  and want to save an image as a JPEG at design time (but \par
only when the image  was loaded from a JPEG source - the IDE cannot be used to convert JPEG's to  bitmaps, but it can be used to convert from \par
JPEGs to bitmaps.\par
\par
7. OnProgressReport now spelt correctly! Note that uses upgrading from earlier versions will experience an error message when loading \par
projects that use the JPEG Component Library reporting that the mis-spelt property name cannot be found. Ignore this error and manually direct the "OnProgressReport" to its event handler.\par
\par
MWA Software\par
http://www,mwasoftware.co.uk\par
}
 