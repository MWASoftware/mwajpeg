{\rtf1\ansi \deff5\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn;}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv{\*\falt Arial};}{\f3\fmodern\fcharset0\fprq1 Courier;}
{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}{\f9\fswiss\fcharset0\fprq2 Helvetica;}
{\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\froman\fcharset0\fprq2 New York;}{\f13\fswiss\fcharset0\fprq2 Geneva;}{\f14\fmodern\fcharset0\fprq1 Courier Bold;}{\f15\fmodern\fcharset0\fprq1 Courier Italic;}
{\f16\fmodern\fcharset0\fprq1 LinePrinter;}{\f17\froman\fcharset0\fprq2 CG Times;}{\f18\fswiss\fcharset0\fprq2 Univers;}{\f19\fnil\fcharset2\fprq2 Marlett;}{\f20\fmodern\fcharset0\fprq1 Lucida Console;}{\f21\fswiss\fcharset0\fprq2 Lucida Sans Unicode;}
{\f22\fnil\fcharset2\fprq2 Wingdings;}{\f23\fnil\fcharset0\fprq2 Dom Casual;}{\f24\fswiss\fcharset0\fprq2 Franklin Cond. Gothic;}{\f25\fswiss\fcharset0\fprq2 Franklin Extra Cond. Gothic;}{\f26\froman\fcharset0\fprq2 Goudy Old Style;}
{\f27\fdecor\fcharset0\fprq2 Windsor;}{\f28\froman\fcharset2\fprq2 MT Extra;}{\f29\fswiss\fcharset0\fprq2 Arial Narrow;}{\f30\fswiss\fcharset0\fprq2 Arial Black;}{\f31\froman\fcharset0\fprq2 Book Antiqua;}{\f32\froman\fcharset0\fprq2 Bookman Old Style;}
{\f33\froman\fcharset0\fprq2 Century Schoolbook;}{\f34\fnil\fcharset2\fprq2 Monotype Sorts;}{\f35\fswiss\fcharset0\fprq2 Haettenschweiler;}{\f36\froman\fcharset0\fprq2 Garamond;}{\f37\fmodern\fcharset2\fprq1 MS LineDraw;}
{\f38\fswiss\fcharset0\fprq2 Tahoma;}{\f39\fnil\fcharset2\fprq2 MS Outlook;}{\f40\fscript\fcharset0\fprq2 Comic Sans MS;}{\f41\fdecor\fcharset0\fprq2 Allegro BT;}{\f42\froman\fcharset0\fprq2 AmerType Md BT;}{\f43\fswiss\fcharset0\fprq2 AvantGarde Md BT;}
{\f44\fswiss\fcharset0\fprq2 AvantGarde Bk BT;}{\f45\froman\fcharset0\fprq2 Benguiat Bk BT;}{\f46\fdecor\fcharset0\fprq2 BernhardFashion BT;}{\f47\froman\fcharset0\fprq2 BernhardMod BT;}{\f48\fswiss\fcharset0\fprq2 BankGothic Md BT;}
{\f49\fdecor\fcharset0\fprq2 Bremen Bd BT;}{\f50\fdecor\fcharset0\fprq2 Charlesworth;}{\f51\fswiss\fcharset0\fprq2 CopprplGoth Bd BT;}{\f52\froman\fcharset0\fprq2 Dauphin;}{\f53\fswiss\fcharset0\fprq2 Futura Md BT;}
{\f54\fswiss\fcharset0\fprq2 Futura Bold BT;}{\f55\fswiss\fcharset0\fprq2 Futura Bold Italic BT;}{\f56\fdecor\fcharset0\fprq2 FuturaBlack BT;}{\f57\fswiss\fcharset0\fprq2 Futura Lt BT;}{\f58\fswiss\fcharset0\fprq2 Futura XBlk BT;}
{\f59\fdecor\fcharset0\fprq2 GoudyHandtooled BT;}{\f60\froman\fcharset0\fprq2 GoudyOlSt BT;}{\f61\froman\fcharset0\fprq2 Goudy Old Style Bold Italic BT;}{\f62\froman\fcharset0\fprq2 Goudy Old Style Bold BT;}
{\f63\froman\fcharset0\fprq2 Goudy Old Style Italic BT;}{\f64\froman\fcharset0\fprq2 Goudy Old Style BT;}{\f65\fswiss\fcharset0\fprq2 Humanst521 BT;}{\f66\fswiss\fcharset0\fprq2 Kabel Bk BT;}{\f67\fswiss\fcharset0\fprq2 Kabel Ult BT;}
{\f68\fnil\fcharset0\fprq2 Lithograph;}{\f69\fdecor\fcharset0\fprq2 LithographLight;}{\f70\fscript\fcharset0\fprq2 OzHandicraft BT;}{\f71\froman\fcharset0\fprq2 PosterBodoni BT;}{\f72\froman\fcharset0\fprq2 Serifa BT;}
{\f73\froman\fcharset0\fprq2 Serifa Th BT;}{\f74\fscript\fcharset0\fprq2 ShelleyAllegro BT;}{\f75\froman\fcharset0\fprq2 Souvenir Lt BT;}{\f76\fscript\fcharset0\fprq2 Staccato222 BT;}{\f77\fswiss\fcharset0\fprq2 Swiss911 XCm BT;}
{\f78\fscript\fcharset0\fprq2 TypoUpright BT;}{\f79\froman\fcharset0\fprq2 ZapfEllipt BT;}{\f80\fswiss\fcharset0\fprq2 Zurich Ex BT;}{\f81\fswiss\fcharset0\fprq2 Zurich BlkEx BT;}{\f82\fswiss\fcharset2\fprq2 CommonBullets;}
{\f83\fswiss\fcharset0\fprq2 Verdana;}{\f84\fnil\fcharset0\fprq2 Avalon;}{\f85\fnil\fcharset0\fprq2 LiquidCrystal;}{\f86\fnil\fcharset0\fprq2 Umbrella;}{\f87\fnil\fcharset0\fprq2 USALight;}{\f88\fnil\fcharset0\fprq2 Vogue;}
{\f89\fscript\fcharset0\fprq2 Snell BT;}{\f90\froman\fcharset0\fprq2 Venetian301 BT;}{\f91\fdecor\fcharset0\fprq2 Atlantic Inline;}{\f92\fnil\fcharset0\fprq2 SwitzerlandCondensed;}{\f93\fnil\fcharset0\fprq2 SwitzerlandCondLight;}
{\f94\fswiss\fcharset0\fprq2 Century Gothic;}{\f95\froman\fcharset0\fprq2 Times New Roman MT Extra Bold;}{\f96\fmodern\fcharset0\fprq2 Letter Gothic MT;}{\f97\fnil\fcharset2\fprq2 WP Greek Century;}{\f98\fmodern\fcharset2\fprq1 WP MultinationalA Courier;}
{\f99\fmodern\fcharset2\fprq1 WP MultinationalB Courier;}{\f100\fmodern\fcharset0\fprq1 WP BoxDrawing;}{\f101\fmodern\fcharset2\fprq1 WP Greek Courier;}{\f102\fnil\fcharset2\fprq2 WP Hebrew David;}{\f103\fnil\fcharset2\fprq2 WP MultinationalA Helve;}
{\f104\fnil\fcharset2\fprq2 WP MultinationalB Helve;}{\f105\fswiss\fcharset2\fprq2 WP Phonetic;}{\f106\fnil\fcharset0\fprq2 WP TypographicSymbols;}{\f107\fnil\fcharset2\fprq2 WP IconicSymbolsA;}{\f108\fnil\fcharset2\fprq2 WP IconicSymbolsB;}
{\f109\fnil\fcharset2\fprq2 WP MathA;}{\f110\fnil\fcharset2\fprq2 WP MathB;}{\f111\fnil\fcharset2\fprq2 WP MathExtendedA;}{\f112\fnil\fcharset2\fprq2 WP MathExtendedB;}{\f113\fnil\fcharset2\fprq2 WP Greek Helve;}{\f114\fnil\fcharset2\fprq2 WP Japanese;}
{\f115\froman\fcharset2\fprq2 WP MultinationalA Roman;}{\f116\fnil\fcharset2\fprq2 WP MultinationalB Roman;}{\f117\froman\fcharset2\fprq2 WP CyrillicA;}{\f118\fnil\fcharset0\fprq2 WP CyrillicB;}{\f119\fnil\fcharset2\fprq2 WP Arabic Sihafa;}
{\f120\fnil\fcharset2\fprq2 WP ArabicScript Sihafa;}{\f121\fnil\fcharset0\fprq2 UpstartSSi;}{\f122\fnil\fcharset0\fprq2 Mini Pics Art Jam;}{\f123\fnil\fcharset0\fprq2 Mini Pics Classic;}{\f124\fnil\fcharset0\fprq2 Mini Pics Lil Critters;}
{\f125\fnil\fcharset0\fprq2 Mini Pics Lil Edibles;}{\f126\fnil\fcharset0\fprq2 Mini Pics Lil Events;}{\f127\fnil\fcharset0\fprq2 Mini Pics Lil Stuff;}{\f128\fnil\fcharset0\fprq2 Mini Pics Lil Vehicles;}{\f129\fnil\fcharset0\fprq2 Mini Pics Red Rock;}
{\f130\fnil\fcharset0\fprq2 Arriba Arriba LET;}{\f131\fnil\fcharset0\fprq2 Bang LET;}{\f132\froman\fcharset0\fprq2 Belwe Bd BT;}{\f133\fnil\fcharset0\fprq2 Boink LET;}{\f134\froman\fcharset0\fprq2 BookmanITC Lt BT;}
{\f135\fdecor\fcharset0\fprq2 Broadway BT;}{\f136\fscript\fcharset0\fprq2 BrushScript BT;}{\f137\froman\fcharset0\fprq2 CentSchbook BT;}{\f138\fscript\fcharset0\fprq2 CommercialScript BT;}{\f139\fswiss\fcharset0\fprq2 Compacta Blk BT;}
{\f140\fswiss\fcharset0\fprq2 Compacta Lt BT;}{\f141\froman\fcharset0\fprq2 Cooper Md BT;}{\f142\fswiss\fcharset0\fprq2 CopprplGoth BT;}{\f143\fscript\fcharset0\fprq2 DomBold BT;}{\f144\fscript\fcharset0\fprq2 DomCasual BT;}
{\f145\fswiss\fcharset0\fprq2 Eras Bd BT;}{\f146\fdecor\fcharset0\fprq2 FlamencoD;}{\f147\fswiss\fcharset0\fprq2 FrnkGothITC Hv BT;}{\f148\fnil\fcharset0\fprq2 Freestyle Script;}{\f149\fswiss\fcharset0\fprq2 Futura Bk BT;}
{\f150\fswiss\fcharset0\fprq2 Futura Book BT;}{\f151\fswiss\fcharset0\fprq2 Futura XBlkCn BT;}{\f152\fswiss\fcharset0\fprq2 Futura MdCn BT;}{\f153\fswiss\fcharset0\fprq2 Humanst521 Cn BT;}{\f154\fdecor\fcharset0\fprq2 IceAgeD;}
{\f155\fnil\fcharset0\fprq2 Jazz LET;}{\f156\fscript\fcharset0\fprq2 Kids;}{\f157\fswiss\fcharset0\fprq2 MicrogrammaDBolExt;}{\f158\froman\fcharset0\fprq2 NewBskvll BT;}{\f159\fscript\fcharset0\fprq2 Nuptial BT;}{\f160\fnil\fcharset0\fprq2 Papyrus LET;}
{\f161\fnil\fcharset0\fprq2 Ruach LET;}{\f162\fnil\fcharset0\fprq2 Scruff LET;}{\f163\fscript\fcharset0\fprq2 ShelleyVolante BT;}{\f164\fswiss\fcharset0\fprq2 Swis721 BT;}{\f165\fswiss\fcharset0\fprq2 Swis721 LtCn BT;}
{\f166\fscript\fcharset0\fprq2 Technical;}{\f167\fswiss\fcharset0\fprq2 VAGRounded BT;}{\f168\fscript\fcharset0\fprq2 Van Dijk;}{\f169\fscript\fcharset0\fprq2 VivaldiD;}{\f170\fswiss\fcharset0\fprq2 Zurich Blk BT;}{\f171\fnil\fcharset2\fprq2 Animals 1;}
{\f172\fnil\fcharset2\fprq2 DF Calligraphic Ornaments LET;}{\f173\fnil\fcharset2\fprq2 DF Diversions LET;}{\f174\fnil\fcharset2\fprq2 DF Diversities LET;}{\f175\fswiss\fcharset2\fprq2 Festive;}{\f176\fswiss\fcharset0\fprq2 BinnerD;}
{\f177\froman\fcharset0\fprq2 ChelthmITC Bk BT;}{\f178\fscript\fcharset0\fprq2 Kaufmann Bd BT;}{\f179\fscript\fcharset0\fprq2 Kaufmann BT;}{\f180\froman\fcharset0\fprq2 Charter Bd BT;}{\f181\froman\fcharset0\fprq2 Charter BT;}
{\f182\fswiss\fcharset0\fprq2 FrnkGothITC Bk BT;}{\f183\fswiss\fcharset0\fprq2 NewsGoth BT;}{\f184\fswiss\fcharset0\fprq2 ZapfHumnst BT;}{\f185\fswiss\fcharset0\fprq2 ZapfHumnst Dm BT;}{\f186\froman\fcharset0\fprq2 Galliard BT;}
{\f187\froman\fcharset0\fprq2 Korinna BT;}{\f188\fdecor\fcharset0\fprq2 PTBarnum BT;}{\f189\froman\fcharset255\fprq2 Roman;}{\f190\fscript\fcharset255\fprq2 Script;}{\f191\fmodern\fcharset255\fprq2 Modern;}{\f192\fswiss\fcharset0\fprq1 MS Dialog;}
{\f193\fswiss\fcharset0\fprq2 Impact;}{\f194\fswiss\fcharset2\fprq2 Animals;}{\f195\fswiss\fcharset2\fprq2 Sign Language;}{\f196\fdecor\fcharset0\fprq2 Playbill BT;}{\f197\fswiss\fcharset2\fprq2 Charting;}{\f198\fswiss\fcharset2\fprq2 Clocks;}
{\f199\fswiss\fcharset2\fprq2 HomePlanning;}{\f200\fswiss\fcharset2\fprq2 Kidnap;}{\f201\fswiss\fcharset2\fprq2 LandscapePlanning;}{\f202\fswiss\fcharset2\fprq2 HomePlanning2;}{\f203\fswiss\fcharset2\fprq2 MorseCode;}{\f204\fswiss\fcharset2\fprq2 Music;}
{\f205\fswiss\fcharset2\fprq2 OfficePlanning;}{\f206\fswiss\fcharset2\fprq2 Semaphore;}{\f207\fswiss\fcharset2\fprq2 Signs;}{\f208\froman\fcharset2\fprq2 ZapfDingbats BT;}{\f209\froman\fcharset2\fprq2 SymbolProp BT;}
{\f210\fscript\fcharset0\fprq2 Monotype Corsiva;}{\f211\fdecor\fcharset0\fprq2 Algerian;}{\f212\fswiss\fcharset0\fprq2 Arial Rounded MT Bold;}{\f213\fdecor\fcharset0\fprq2 Braggadocio;}{\f214\fswiss\fcharset0\fprq2 Britannic Bold;}
{\f215\fscript\fcharset0\fprq2 Brush Script MT;}{\f216\fdecor\fcharset0\fprq2 Colonna MT;}{\f217\fdecor\fcharset0\fprq2 Desdemona;}{\f218\froman\fcharset0\fprq2 Footlight MT Light;}{\f219\fdecor\fcharset0\fprq2 Kino MT;}
{\f220\froman\fcharset0\fprq2 Wide Latin;}{\f221\fscript\fcharset0\fprq2 Matura MT Script Capitals;}{\f222\fdecor\fcharset0\fprq2 Playbill;}{\f223\fnil\fcharset0\fprq2 USABlack;}{\f224\fscript\fcharset0\fprq2 Lucida Handwriting;}
{\f225\fswiss\fcharset0\fprq2 Lucida Sans;}{\f226\fswiss\fcharset0\fprq2 News Gothic MT;}{\f227\fmodern\fcharset0\fprq1 IBMPCDOS;}{\f228\fnil\fcharset2\fprq2 MS Reference 1;}{\f229\fnil\fcharset2\fprq2 MS Reference 2;}
{\f230\froman\fcharset2\fprq2 Times New Roman Special G1;}{\f231\froman\fcharset2\fprq2 Times New Roman Special G2;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;
\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 \snext0 Normal;}{\s1\sb60\sl-240\slmult0\keepn\widctlpar \b\f5 \snext0 heading 1;}{\s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f5\fs20 \sbasedon1\snext0 heading 2;}{
\s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 \sbasedon1\snext0 heading 3;}{\s4\fi-245\li360\sb120\sa60\sl-240\slmult1\widctlpar \f5\fs20 \sbasedon2\snext4 heading 4;}{\s5\sb60\sa60\sl-240\slmult1\widctlpar \b\f5\fs20 \sbasedon2\snext0 
heading 5;}{\s6\sb40\sl-238\slmult0\keepn\widctlpar\pvpara\posy0\absh255\dxfrtext130\dfrmtxtx130\dfrmtxty0 \b\f5\fs21 \sbasedon1\snext21 heading 6;}{\s9\li115\sa20\sl-240\slmult0\keepn\widctlpar\tx1440\tx2880 \f5\fs16 \sbasedon1\snext0 heading 9;}{\*
\cs10 \additive Default Paragraph Font;}{\s15\li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext15 wfxRecipient;}{\s16\li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext16 wfxFaxNum;}{\s17\li2880\sa60\sl-220\slmult0
\widctlpar\phpg\posxc\posyb\absh-1980\absw7920\dxfrtext180\dfrmtxtx180\dfrmtxty0 \f11 \sbasedon0\snext17 envelope address;}{\s18\fi-862\li862\sa240\sl-240\slmult0\keep\keepn\widctlpar\tx864 \b\f5\fs32\cf6 \sbasedon1\snext0 Appendix;}{
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext0 footnote text;}{\*\cs20 \additive\super \sbasedon10 footnote reference;}{\s21\sb40\sa160\sl-220\slmult0\widctlpar \f5\fs21 \sbasedon0\snext0 H6p;}{\s22\fi-300\li420\ri140\sb100\sl-210\slmult0
\widctlpar\tx140\tx420 \f29\fs19 \snext22 *Cbx;}{\s23\fi-300\li420\ri140\sb100\sa100\sl-210\slmult0\widctlpar\tx140\tx420 \f29\fs19 \sbasedon22\snext0 *Cbxe;}{\s24\qc\fi-245\li360\sl-360\slmult0\keepn\widctlpar\box\brdrs\brdrw15\brsp20\brdrcf8 
\pvpara\phpg\absh-390\absw1460\dxfrtext220\dfrmtxtx220\dfrmtxty0 \shading6000\cfpat2 \f29\cf8\up4 \sbasedon4\snext4 *hb1;}{\s25\ri120\sa60\sl-360\slmult0\keepn\widctlpar\box\brdrs\brdrw15\brsp80\brdrcf8 \pvpara\phmrg\posxr\posy0\absh-390 
\shading6000\cfpat2 \b\f29\cf8\up10 \sbasedon0\snext0 *hb2;}{\*\cs26 \additive\cf11 \sbasedon10 annotation reference;}{\s27\li120\sa60\sl-220\slmult0\widctlpar \f5\cf11 \sbasedon0\snext27 annotation text;}{
\s28\li115\sb120\sa120\widctlpar\tx120\tx480\tx840 \f5\fs20 \sbasedon0\snext0 Art;}{\s29\sa120\keepn\widctlpar\tx120\tx480\tx840\tqr\tx1560\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty0 \f5\fs20 \sbasedon28\snext0 ArtSd;}{
\s30\li120\sa240\sl-220\slmult0\widctlpar\tx120\tx480\tx840 \b\f5\fs20 \sbasedon0\snext0 Cap;}{\s31\li120\sl-220\slmult0\widctlpar\tx120\tx480\tx840\tqr\tx1560\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty0 \b\f5\fs20 \sbasedon30\snext0 
CapSd;}{\s32\sb120\keepn\widctlpar \b\f5\fs28 \sbasedon1\snext0 Ch;}{\s33\li-1800\sa280\sl-240\slmult0\keepn\widctlpar \caps\f4\expnd24\expndtw120 \snext32 Cn;}{\s34\li440\sa80\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext35 Def1;}{
\s35\li120\sb20\sa20\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext34 Term1;}{\s36\li560\sa80\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon34\snext0 Def2;}{\s37\sb60\sa60\sl-240\slmult1\widctlpar \b\f5\fs20 \sbasedon2\snext38 Erm;}{
\s38\li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext38 Erp;}{\s39\sb60\sa60\sl-240\slmult1\widctlpar\tx600 \b\f5\fs20 \sbasedon37\snext38 Ermn;}{\s40\li120\sl-240\slmult0\keep\widctlpar\tx480\tx840\tx1200\tx1560\tx1920\tx2280\tx2640\tx3000 
\f11\fs20 \snext40 Ex;}{\s41\li280\sl-240\slmult0\keep\widctlpar\tx480\tx670\tx840\tx1060\tx1200\tx1450\tx1840\tx1920\tx2230\tx2280\tx2620\tx3010\tx3400\tx3790\tx4180\tx4570\tx4960\tx5350\tx5740\tx6130\tx6520\tx6910 \f11\fs20 \sbasedon40\snext41 Exl;}{
\s42\li560\sl-240\slmult0\keep\widctlpar\tx480\tx840\tx950\tx1200\tx1340\tx1730\tx1920\tx2120\tx2280\tx2510\tx2900\tx3290\tx3680\tx4070\tx4460\tx4850\tx5240\tx5630\tx6020\tx6410\tx6800 \f11\fs20 \sbasedon41\snext42 Exl2;}{\s43\li-1800\sl-240\slmult0
\keep\widctlpar\tx-1410\tx-1020\tx-630\tx-240\tx150\tx480\tx540\tx840\tx930\tx1200\tx1320\tx1710\tx1920\tx2100\tx2280\tx2490\tx2640\tx2880\tx3000\tx3270\tx3660\tx4050\tx4440\tx4830\tx5220\tx5610\tx6000\tx6390\tx6780 \f11\fs20 \sbasedon40\snext43 Exw;}{
\s44\fi-1800\li1800\sl-140\slmult0\widctlpar\tqc\tx4320\tqr\tx8640 \f4\fs10 \snext44 footer;}{\s45\li120\sa60\sl-220\slmult0\widctlpar\tqc\tx4320\tqr\tx8640 \b\f5\fs20 \sbasedon0\snext45 header;}{\s46\li-1770\ri30\sb50\sl-80\slmult0\widctlpar\brdrt
\brdrs\brdrw15\brdrcf2 \f4\fs12 \snext0 header rule;}{\s47\sb60\sl-240\slmult0\keepn\widctlpar \b\f5 \sbasedon1\snext0 Hn1;}{\s48\sb60\sa60\sl-240\slmult1\widctlpar \b\f5\fs20 \sbasedon2\snext0 Hn2;}{\s49\li120\sb60\sa60\sl-240\slmult0\widctlpar 
\b\f5\fs20 \sbasedon3\snext0 Hn3;}{\s50\li-1800\sa420\sl-600\slmult0\keepn\pagebb\widctlpar \b\f29\fs48 \snext0 Ih;}{\s51\sa80\sl-220\slmult0\keepn\widctlpar \v\f29\cf5 \sbasedon0\snext0 index;}{\s52\fi-320\li440\sa60\sl-220\slmult0
\widctlpar\tqr\tx360\tx440 \f5\fs20 \sbasedon53\snext52 Lb1;}{\s53\fi-440\li440\sa60\sl-220\slmult0\widctlpar\tqr\tx360\tx440 \f5\fs20 \sbasedon0\snext53 Ln1;}{\s54\fi-320\li760\sa60\sl-220\slmult0\widctlpar\tqr\tx680\tx760 \f5\fs20 \sbasedon55\snext54 
Lb2;}{\s55\fi-446\li763\sa60\sl-220\slmult0\widctlpar\tqr\tx680\tx760 \f5\fs20 \sbasedon53\snext55 Ln2;}{\s56\li446\sa60\sl-220\slmult0\widctlpar\tx440 \f5\fs20 \sbasedon52\snext56 Lbp;}{\s57\li120\sl-80\slmult0\widctlpar \f5\fs12 \sbasedon0\snext0 Le;}{
\s58\li120\sl-40\slmult0\widctlpar \f5\fs12 \sbasedon57\snext0 Leh;}{\s59\sa80\sl-220\slmult0\widctlpar \f5\fs21 \sbasedon0\snext59 Lmc;}{\s60\li446\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon61\snext60 Lp1;}{\s61\li440\sa60\sl-220\slmult0\widctlpar 
\f5\fs20 \sbasedon0\snext61 Normal Indent;}{\s62\li760\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon60\snext62 Lp2;}{\s63\sl-220\slmult0\keepn\widctlpar\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty0 \f5\fs19 \snext0 Mp;}{
\s64\li120\sl-120\slmult0\widctlpar\brdrt\brdrs\brdrw15\brsp20 \f4\fs12 \snext0 Ne;}{\s65\li440\sl-120\slmult0\widctlpar\brdrt\brdrs\brdrw15\brsp20 \f4\fs12 \sbasedon64\snext61 Nei;}{\s66\li120\sa60\sl-220\slmult0\widctlpar\tx720\tx1200 \f5\fs20 
\sbasedon0\snext64 Nh;}{\s67\li440\sa60\sl-220\slmult0\widctlpar\tx1040\tx1520 \b\f29\fs20 \sbasedon0\snext67 Nhi;}{\s68\li120\sb40\sa80\sl-220\slmult0\keepn\widctlpar \f5\fs20 \sbasedon0\snext64 Np1;}{\s69\fi-280\li280\sb40\sa80\sl-220\slmult0
\keepn\widctlpar \f5\fs20 \sbasedon68\snext65 Np1i;}{\s70\li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext64 Np2;}{\s71\li440\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext65 Np2i;}{\s72\li120\sa40\sl-120\slmult0\widctlpar\brdrb
\brdrs\brdrw15 \f4\fs12 \sbasedon64\snext66 Ns;}{\s73\li440\sa40\sl-120\slmult0\widctlpar\brdrb\brdrs\brdrw15 \f4\fs12 \sbasedon72\snext67 Nsi;}{\s74\li-280\sl-80\slmult0\keepn\pagebb\widctlpar\pvpara\phpg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0 \f4\fs12 
\snext0 Pb;}{\s75\li120\sb40\sa60\sl-220\slmult0\widctlpar \b\f5\fs20 \sbasedon0\snext53 Proch;}{\s76\li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext53 Procp;}{\s77\sb60\sl-240\slmult1\keepn\widctlpar \b\f5 \sbasedon1\snext9 Rh1;}{
\s78\sb60\sa60\sl-240\slmult1\widctlpar \b\f5\fs20 \sbasedon2\snext0 Rmh;}{\s79\li-1770\ri30\sb280\sa250\sl-120\slmult0\keepn\widctlpar\brdrb\brdrs\brdrw15\brdrcf2 \f4\fs8\cf8 \snext77 Rule;}{\s80\li-240\sl-300\slmult0\widctlpar \f4\fs16 \snext0 Sbre;}{
\s81\li280\ri280\sl-220\slmult0\keepn\widctlpar\tx670\tx1060\tx1450\tx1840\tx2230\tx2620\tx3010\tx3400\tx3790\tx4180\tx4570\tx4960\tx5350\tx5740\tx6130\tx6520 \f11\fs16 \snext81 SbrEx;}{\s82\li280\ri280\sb220\sa40\sl-280\slmult0\keepn\widctlpar \b\f29 
\snext0 Sbrh;}{\s83\li280\ri280\sb40\sa40\sl-240\slmult0\keepn\widctlpar \b\f29\fs21 \snext0 Sbrh2;}{\s84\fi-280\li560\ri280\sa80\sl-220\slmult0\keepn\widctlpar\tx560 \f5\fs20 \sbasedon0\snext84 SbrLb;}{\s85\qr\li280\ri280\sl-160\slmult0\keepn\widctlpar 
\f5\fs12 \sbasedon0\snext0 SbrLe;}{\s86\fi-280\li560\ri280\sa80\sl-220\slmult0\keepn\widctlpar\tx560 \f5\fs20 \sbasedon84\snext84 SbrLp;}{\s87\li280\ri280\sa160\sl-240\slmult0\keepn\widctlpar \f4\fs21 \snext87 Sbrp;}{\s88\li-240\sl-100\slmult0
\keepn\widctlpar \f4\fs16 \snext82 Sbrs;}{\s89\li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext89 Syn;}{\s90\li-1800\sa60\sl-220\slmult0\widctlpar\tx-1520\tx-1240\tx-960\tx-680\tx-400\tx-120\tx160\tx440\tx720\tx1000 \f5\fs20 
\sbasedon0\snext0 Synw;}{\s91\li120\sb20\sa60\widctlpar\tx240\tx280\tx560 \f5\fs19 \sbasedon0\snext91 Tart;}{\s92\qr\li30\ri30\sb80\sa80\sl-180\slmult0\widctlpar\brdrt\brdrs\brdrw15\brsp20 \f5\fs16 \sbasedon0\snext0 Te;}{\s93\li120\sl-40\slmult0
\widctlpar \f5\fs12 \sbasedon94\snext0 Teh;}{\s94\li120\sl-80\slmult0\widctlpar \f5\fs12 \sbasedon0\snext0 Tes;}{\s95\qr\li310\ri30\sb80\sa80\sl180\slmult0\widctlpar\brdrt\brdrs\brdrw15\brsp20 \f5\fs16 \sbasedon0\snext53 Tei;}{
\s96\li280\sb20\sa20\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon35\snext36 Term2;}{\s97\qr\li-1770\ri30\sb80\sa80\sl180\slmult0\widctlpar\brdrt\brdrs\brdrw15\brsp20 \f5\fs16 \sbasedon92\snext0 Tew;}{\s98\li120\sl-240\slmult0
\keep\widctlpar\tx480\tx840\tx1200\tx1560\tx1920\tx2280\tx2640\tx3000 \f3\fs20 \snext98 Tex;}{\s99\li120\sb20\sa60\sl-240\slmult0\keep\widctlpar\tx480\tx840\tx1200\tx1560\tx1920\tx2280\tx2640\tx3000 \f11\fs20 \sbasedon40\snext99 Texf;}{
\s100\fi-140\li140\sb20\sa40\sl-200\slmult0\widctlpar\tx280 \f5\fs17 \sbasedon0\snext100 Tf;}{\s101\li200\sb40\sl-220\slmult0\widctlpar \b\f5\fs20 \sbasedon0\snext102 Th;}{\s102\li120\sl-40\slmult0\widctlpar\brdrt\brdrs\brdrw15\brsp20 \f4\fs8 \snext0 Tr;}
{\s103\li120\sb40\sl-220\slmult0\widctlpar \b\f5\fs20 \sbasedon101\snext103 Thf;}{\s104\li120\sa40\sl-220\slmult0\widctlpar\tqr\tldot\tx6960 \f5\fs20 \sbasedon0\snext105 toc 1;}{\s105\li280\sa40\sl-220\slmult0\widctlpar\tqr\tldot\tx6960 \f5\fs20 
\sbasedon104\snext105 toc 2;}{\s106\li560\sa40\sl-220\slmult0\widctlpar\tqr\tldot\tx6960 \f5\fs20 \sbasedon104\snext106 toc 3;}{\s107\li240\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext107 Tp;}{\s108\li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 
\sbasedon107\snext108 Tpf;}{\s109\li440\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon61\snext109 Tpi;}{\s110\li320\sa60\sl-220\slmult0\widctlpar \f5\fs20 \sbasedon0\snext109 Tpif;}{\s111\qr\li240\sa60\sl-220\slmult0\widctlpar \f5\fs20 
\sbasedon107\snext111 Tpr;}{\s112\li120\sb20\sa60\sl-220\slmult0\widctlpar \f5\fs19 \sbasedon89\snext112 Tsyn;}{\s113\sb20\sa60\sl-220\slmult0\keepn\widctlpar \b\f5\fs19 \snext102 Tt;}{\s114\li-1800\sb20\sa60\sl-220\slmult0\keepn\widctlpar \b\f5\fs19 
\sbasedon113\snext102 Ttw;}{\s115\li120\sl-120\slmult0\widctlpar\brdrt\brdrdb\brdrw15\brsp20\brdrcf2 \f4\fs12 \sbasedon64\snext0 We;}{\s116\li440\sl-120\slmult0\widctlpar\brdrt\brdrdb\brdrw15\brsp20\brdrcf2 \f4\fs12 \sbasedon115\snext61 Wei;}{
\s117\li120\sa60\sl-220\slmult0\widctlpar\tx1200 \f5\fs18\cf1 \sbasedon0\snext115 Wh;}{\s118\li440\sa60\sl-220\slmult0\widctlpar\tx1560 \f5\fs18\cf1 \sbasedon117\snext116 Whi;}{\s119\li120\sa40\sl-120\slmult0\widctlpar\brdrb\brdrdb\brdrw15\brdrcf2 
\f4\fs12 \sbasedon72\snext117 Ws;}{\s120\li440\sa40\sl-120\slmult0\widctlpar\brdrb\brdrdb\brdrw15\brdrcf2 \f4\fs12 \sbasedon119\snext61 Wsi;}{\*\cs121 \additive\ul \sbasedon10 Popup Text;}{\*\cs122 \additive\v\cf13 \sbasedon10 Hidden Text;}{\*\cs123 
\additive\uldb \sbasedon121 Jump Text;}{\*\cs124 \additive\f11 \sbasedon10 Example Code Text;}{\*\cs125 \additive\scaps\f5\fs20 \sbasedon10 Keystroke Text;}{\s126\li115\sb160\sa60\sl-240\slmult0\widctlpar \f5\fs20 \sbasedon0\snext0 See Also;}{
\s127\sb60\sa60\sl-240\slmult0\keepn\widctlpar \b\f5\fs20 \sbasedon2\snext127 ClassTitle;}{\s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \sbasedon0\snext128 source;}{\s129\li-72\sa60\sl-220\slmult0\widctlpar \b\f5\fs16 \sbasedon0\snext0 
Cell Header;}}{\info{\author Tony Whyman}{\operator Tony Whyman}{\creatim\yr1997\mo4\dy24\hr8\min47}{\revtim\yr1998\mo7\dy20\hr9\min3}{\version2}{\edmins1}{\nofpages55}{\nofwords3245}{\nofchars18500}{\*\company McCallum Whyman Associates Ltd}{\vern57443}}
\paperw11906\paperh16838 \widowctrl\ftnbj\aenddoc\makebackup\linkstyles\hyphcaps0\formshade \fet0{\*\template D:\\UTILS\\HELPAUTH\\what6\\WHAT6.DOT}\sectd \linex0\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 Comment Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 Comment}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 Comment}}} Comment: string
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 This comment is included in the compressed JPEG image. A typical use is to include a copyright message.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 DCTMethod Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 DCTMethod}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 DCTMethod}}} DCTMethod: J_DCT_METHOD;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Classes: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  and  }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 
Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 Selects the algorithm used for the DCT quantisation step.  Choices are: 
\par }\trowd \trgaph108\trleft450 \cellx2430\cellx6030 \pard \sa60\sl-220\slmult0\widctlpar\intbl {\lang2057 JDCT_ISLOW:\cell slow but accurate integer algorithm \cell }\pard \widctlpar\intbl {\lang2057 \row }\trowd \trgaph108\trleft450 \cellx2430\cellx6030 
\pard \sa60\sl-220\slmult0\widctlpar\intbl {\lang2057 JDCT_IFAST:\cell faster, less accurate integer method \cell }\pard \widctlpar\intbl {\lang2057 \row }\trowd \trgaph108\trleft450 \cellx2430\cellx6030 \pard \sa60\sl-220\slmult0\widctlpar\intbl {
\lang2057 JDCT_FLOAT:\cell floating-point method. \cell }\pard \widctlpar\intbl {\lang2057 \row }\pard \li120\sa60\sl-220\slmult0\widctlpar {\lang2057 
The FLOAT method is very slightly more accurate than the ISLOW method, but may give different results on different machines due to varying roundoff behaviour.  The integer methods should give the same results on all machines.  On machines with sufficientl
y fast FP hardware, the floating-point method may also be the fastest.  The IFAST method is considerably less accurate than the other two; its use is not recommended if high quality is a concern.  
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 DensityUnit Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 DensityUnit}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 DensityUnit}}}
 DensityUnit: UINT8; X_Density: UNIT16; Y_Density: UNIT16;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 
The resolution information to be written into the JFIF marker; not used otherwise.  density_unit may be 0 for unknown, 1 for dots/inch, or 2 for dots/cm.  The default values are 0,1,1 indicating square pixels of unknown size.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 GrayscaleOutput Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 GrayscaleOutput}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 GrayscaleOutput}}} GrayscaleOutput: boolean;

\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Classes: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  and  }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 
Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 If true then the image is converted to a grayscale image.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 OptimizeCoding Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 OptimizeCoding}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 OptimizeCoding}}} OptimizeCoding: boolean;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 
TRUE causes the compressor to compute optimal Huffman coding tables for the image.  This requires an extra pass over the data and therefore costs a good deal of space and time.  The default is FALSE, which tells the compressor
 to use the supplied or default Huffman tables.  In most cases optimal tables save only a few percent of file size compared to the default tables.  
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 ProgressiveJPEG Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 ProgressiveJPEG}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 ProgressiveJPEG}}} ProgressiveJPEG: boolean;

\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 
Progressive JPEG rearranges the stored data into a series of scans of increasing quality.  In situations where a JPEG file is transmitted across a slow communications link, a decoder can generate a low-quality
 image very quickly from the first scan, then gradually improve the displayed quality as more scans are received.  The final image after all scans are complete is identical to that of a regular (sequential) JPEG file of the same quality setting.  Progress
ive JPEG files are often slightly smaller than equivalent sequential JPEG files, but the possibility of incremental display is the main reason for using progressive JPEG.
\par When this property is set to true a progressive JPEG file is generated using a default scan script generated by the JPEG library.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 Quality Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 Quality}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 Quality}}} Quality: int;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 JPEG quantisation tables appropriate for the indicated quality setting are generated.  The quality value is expressed on a 0..100 scale. 
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 RestartInterval Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 RestartInterval}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 RestartInterval}}}
 RestartInterval: Cardinal; RestartInRows: int;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 To emit restart markers in the JPEG f
ile, set one of these nonzero. Set RestartInterval to specify the exact interval in MCU blocks. Set RestartInRows to specify the interval in MCU rows.  (If RestartInRows is not 0, then RestartInterval is set after the image width in MCUs is computed.)  De
faults are zero (no restarts). 
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 SmoothingFactor Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 SmoothingFactor}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 SmoothingFactor}}} SmoothingFactor: int;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 If non-zero, the input image is smoothed; the value should be 1 for minimal smoothing to 100 for maximum smoothing.  The default is zero.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 Trace_Level Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 TraceLevel}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 Trace_Level}}} Trace_Level: int;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Classes: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  and  }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 
Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 Controls the level of trace information reported. (set >= 3 to see more than the first warning message).
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 WriteAllTables Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 WriteAllTables}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 WriteAllTables}}} WriteAllTables: boolean;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 
Set to True (default) to ensure that a proper JPEG Interchange stream is written. If false, then the quantisation and Huffman tables are not written to the JPEG file. This makes for a smaller file but creates difficulties for the decompressor unless some 
other way is found to transfer these tables.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 WriteJFIFHeader Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 WriteJFIFHeader}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 WriteJFIFHeader}}} WriteJFIFHeader: boolean;

\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 If true (default) then a JFIF APP0 marker is emitted. The decompressor will then recognise it as a JFIF compatible stream. 
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 SavePictureToFile Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 SavePictureToFile}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 SavePictureToFile}}}
 procedure SavePictureToFile(Picture: TPicture; const FileName: string);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 Provided that the Picture holds a Bitmap or a Metafile image, it will be compressed to a JPEG and written out to the file "FileName".
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 SavePictureToStream Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 SavePictureToStream}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 SavePictureToStream}}}
 procedure SavePictureToStream(Picture: TPicture; Stream: TStream);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 Provided that the Picture holds a Bitmap or a Metafile image, it will be compressed to a JPEG and written out to the provided stream.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 SaveBitMapToStream Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 SaveBitMapToStream}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 SaveBitMapToStream}}}
 procedure SaveBitMapToStream(bitmap: TBitmap; Stream: TStream);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 The bitmap is compressed to a JPEG and written out to the provided stream.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 SaveDIBitmapToStream Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 SaveDIBitmapToStream}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 SaveDIBitmapToStream}}}
 procedure SaveDIBitmapToStream(Stream: TStream; const BitmapInfo: TBitmapInfo;bits: PChar);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 
The device independent bitmap held in the memory block given by "bits", is compressed to a JPEG and written out to the provided stream. Note that the BitmapInfo structure is defined by the Windows API and defines the size and resolution of the bitmap and 
may also contain a colour map.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 SaveMetaFileToStream Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 SaveMetaFileToStream}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 SaveMetaFileToStream}}}
 procedure SaveMetaFileToStream(metafile: TMetafile; Stream: TStream; width, height: longint);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 The metafile is compressed to a JPEG and written out to the provided stream. Note that the height and width of the required image (in pixels) must also be provided.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 WriteMarker Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 WriteMarker}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 WriteMarker}}}
 procedure WriteMarker(Marker: int; const buf; Count: uint);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 This method may be called from the event "}{\uldb\lang2057 OnWriteMarkers}{\v\uldb\lang2057 Topic_OnWriteMarkers}{\lang2057 
" to write out data with a JPEG APPn marker. The actual marker is identified by the Marker parameter (e.g. to write out an APP1 marker, set Marker to one). The value data written out is contained in buf and contains Count bytes.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 OnProgessReport Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 OnProgessReport}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 OnProgessReport}}} OnProgessReport: TNotifyEvent

\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Classes: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  and  }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 
Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 Called regularly during compression/decompression to enable a progress report to be maintained. The PercentDone integer property (read only) may be consu
lted to find out the percentage so far processed.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 OnWriteMarkers Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 OnWriteMarkers}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 OnWriteMarkers}}} OnWriteMarkers: TNotifyEvent

\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 This event occurs when it is permissible to output application specific markers to the JPEG data stream. See discussion of }{\uldb\lang2057 WriteMarker}{\v\uldb\lang2057 
Topic_WriteMarker}{\lang2057  Method for details on how to do this.
\par }
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 DitherMode Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 DitherMode}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 DitherMode}}} DitherMode: J_DITHER_MODE 
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 Selects color dithering method.  Supported values are:
\par }\trowd \trgaph108\trleft270 \cellx2520\cellx5040 \pard \sa60\sl-220\slmult0\widctlpar\intbl {\lang2057 JDITHER_NONE\cell no dithering: fast, very low quality \cell }\pard \widctlpar\intbl {\lang2057 \row }\trowd \trgaph108\trleft270 \cellx2520\cellx5040 
\pard \sa60\sl-220\slmult0\widctlpar\intbl {\lang2057 JDITHER_ORDERED\cell ordered dither: moderate speed and quality \cell }\pard \widctlpar\intbl {\lang2057 \row }\trowd \trgaph108\trleft270 \cellx2520\cellx5040 \pard \sa60\sl-220\slmult0
\widctlpar\intbl {\lang2057 JDITHER_FS\cell Floyd-Steinberg dither: slow, high quality\cell }\pard \widctlpar\intbl {\lang2057 \row }\pard \li120\sa60\sl-220\slmult0\widctlpar {\lang2057 
Default is JDITHER_FS.  (At present, ordered dither is implemented only in the single-pass, standard-colormap case.  If you ask for ordered dither when two_pass_quantize is TRUE or when you supply an external color map, you'll get F-S dithering.)
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 DoBlockSmoothing Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 DoBlockSmoothing}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 DoBlockSmoothing}}} DoBlockSmoothing: boolean

\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 If TRUE, interblock smoothing is applied in early stages of decoding progressi
ve JPEG files; if FALSE, not.  Default is TRUE.  Early progression stages look "fuzzy" with smoothing, "blocky" without. 
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 DoFancyUpSampling Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 DoFancyUpSampling}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 DoFancyUpSampling}}} DoFancyUpSampling: boolean

\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 If TRUE, do careful upsampling of chroma components.  If FALSE, a faster but sloppier method is used.  Default is TRUE.  The visual impact of the sloppier method is often very small.

\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 TwoPassQuantize Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 TwoPassQuantize}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 TwoPassQuantize}}} TwoPassQuantize: boolean

\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 
If TRUE, an extra pass over the image is made to select a custom colour map for the image.  This usually looks a lot better than the one-size-fits-all colourmap that is used otherwise.  Default is TRUE.  Ignored when the application supplies its own colou
r map.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 LoadPictureFromFile Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 LoadPictureFromFile}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 LoadPictureFromFile}}}
 procedure LoadPictureFromFile(Picture: TPicture; const FileName: string);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 Opens the file identified by FileName which is assumed to contain a JPEG image in the JFIF format. This is decoded into a windows bitmap and loaded into the supplied Picture object. 

\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 ConvertToDIB Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 ConvertToDIB}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 ConvertToDIB}}}
 procedure ConvertToDIB(Source, Destination: TStream; OutputType: {\uldb TJPEGOutputType}{\v\uldb Topic_TJPEGOutputType});
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 Converts a JPEG compressed image Windows Device Independent bitmap contained in the Source stream to a Windows Device Independent bitmap written to the destination stream.
\par The format of the DIB is determined by the setting of OutputType. 
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 TJPEGOutputType  Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 TJPEGOutputType }}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 TJPEGOutputType }}} TJPEGOutputType =
\par \trowd \trgaph108\trleft540 \cellx2250\cellx4590 \pard\plain \sa60\sl-220\slmult0\widctlpar\intbl \f5\fs20 {\lang2057  (jp24bit,\cell  \{24 bit bitmap\} \cell }\pard \widctlpar\intbl {\lang2057 \row }\trowd \trgaph108\trleft540 \cellx2250\cellx4590 \pard 
\sa60\sl-220\slmult0\widctlpar\intbl {\lang2057 jp8bit,\cell \{56 colour bitmap\} \cell }\pard \widctlpar\intbl {\lang2057 \row }\pard \sa60\sl-220\slmult0\widctlpar\intbl {\lang2057 jp4bit,\cell \{6 colour bitmap\}\cell }\pard \widctlpar\intbl {
\lang2057 \row }\trowd \trgaph108\trleft540 \cellx2250\cellx4590 \pard \sa60\sl-220\slmult0\widctlpar\intbl {\lang2057 jpGrayscale);\cell \{Gyscale\} \cell }\pard \widctlpar\intbl {\lang2057 \row }\pard \li120\sa60\sl-220\slmult0\widctlpar 
Determines the bitmap resolution.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 LoadPictureFromStream Method}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 LoadPictureFromStream}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 LoadPictureFromStream}}}
 procedure LoadPictureFromStream(Picture: TPicture; Stream: TStream);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 The source stream is assumed to contain a JPEG image in the JFIF format. This is decoded into a windows bitmap and loaded into the supplied Picture object.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 ReadBitMapFromStream Method}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 ReadBitMapFromStream}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 ReadBitMapFromStream}}}
 function ReadBitMapFromStream(Stream: TStream): TBitmap;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 The source stream is assumed to contain a JPEG image in the JFIF format. This is decoded into a windows bitmap and returned as a TBitmap object. 
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} LoadPictureFromResource{\lang2057  method}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_LoadPictureFromResource}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} LoadPictureFromResource}}
 procedure LoadPictureFromResource(Picture: TPicture; Instance: THandle; const ResName: string);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 
This method is used to read a JPEG Image from a user defined resource bound into the program (identified by the ResName) and load it into the specified Picture. Although the same can be achieved by loading a JPEG into (e.g. a TImage) at design time, the i
mage will then be saved (as a resource) and bound into the .exe as a much larger bitmap. Separately providing the JPEG image as a user defined resource and loading it at run-time can reduced significantly the size of the final .exe. 
\par See also }{\uldb\lang2057 How to make a JPEG Image into a user defined resource}{\v\cf13\lang2057 Topic_JPEGResource}{\lang2057 .
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} LoadPictureFromResID{\lang2057  Method}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_LoadPictureFromResID}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} LoadPictureFromResID}}
 procedure LoadPictureFromResID(Picture: TPicture; Instance: THandle; ResID: Integer);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 This method is used to read a
 JPEG Image from a user defined resource bound into the program (identified by the ResID) and load it into the specified Picture. Although the same can be achieved by loading a JPEG into (e.g. a TImage) at design time, the image will then be saved (as a r
esource) and bound into the .exe as a much larger bitmap. Separately providing the JPEG image as a user defined resource and loading it at run-time can reduced significantly the size of the final .exe. 
\par See also }{\uldb\lang2057 How to make a JPEG Image into a user defined resource}{\v\cf13\lang2057 Topic_JPEGResource}{\lang2057 .
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 ReadDIBitmapFromStream Method}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 ReadDIBitmapFromStream}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 ReadDIBitmapFromStream}}}
 procedure ReadDIBitmapFromStream(Stream: TStream;\line \tab \tab \tab var BitMapInfo: TBitMapInfo;\line \tab \tab \tab OutputType: {\uldb TJPEGOutputType}{\v\uldb Topic_TJPEGOutputType};\line \tab \tab \tab var bits: THandle);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 The source stream is assumed to contain a JPEG image in the JFIF format. This is decoded into a windows devi
ce independent bitmap and returned in the memory block given by bits. The output type is determined as above and the information describing the bitmap size, resolution and colour map is returned in the Windows APS BitMapInfo structure. 
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 OnJPEGComment Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 OnJPEGComment}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 OnJPEGComment}}} OnJPEGComment: TJPEGCommentEvent

\par   TJPEGCommentEvent = procedure(sender: TJPEGBase; comment: PChar) of object;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 This event occurs when a comment is found in the JPEG compressed image. The comment is extracted and provided as a parameter to the event handler.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} {\lang2057 OnJPEGMarker Property}}} {\cs20\super #{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_{\lang2057 OnJPEGMarker}}} {\cs20\super K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} {\lang2057 OnJPEGMarker}}} OnJPEGMarker: TJPEGMarkerEvent

\par   TJPEGMarkerEvent = procedure(sender: TJPEGBase; Marker: int; var Done: boolean) of object;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  }{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 {\lang2057 This event occurs when any other JPEG marker is found in the JPEG image (except for APP1 the JFIF marker
). The marker is identified by the Marker parameter (range 1..13), and the response method may read successive bytes from the stream after the marker by calling the GetByte method (this is a parameterless function that returns a single byte value). Note t
hat marker processing is application specific.
\par If the marker is not processed, then the response method should return with Done set to false. The marker text will then be skipped, otherwise, Done should be set to true to indicate that the response method has handled the marker itself.
\par }\pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} Abort}#{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {
\cs20\super #} Topic_Abort}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} Abort}}procedure Abort; virtual;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Classes: }{\uldb\lang2057 TJPEGFileDecompressor}{\v\cf13\lang2057 Topic_TJPEGFileDecompressor}{\lang2057  and  }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 
Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 
The Abort method may be called to abandon a compression or decompression operation. It must be called from the same thread as the compression or decompression operation. Practically, this limits its use to an event handler (e.g. {\uldb OnProgressReport}{
\v Topic_}{\v\lang2057 OnProgessReport}), when it may be used to abort the operation, perhaps in response to a user cancellation request.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} procedure SaveStretchedPictureToStream}#{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_SaveStretchedPictureToStream}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} SaveStretchedPictureToStream}}
procedure SaveStretchedPictureToStream(Picture: TPicture; width,height: integer; Stream: TStream);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 The provided Bitmap is stretched to the specified width and height, and then compressed to a JPEG and written out to the stream.
\par Note that the image processing is carried out at the current screen resolution. In order to get the best results, you should set your display adapter to the best resolution and colour depth supported by your display adapter/monitor.
\par 
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} SaveStretchedBitmapToFile}#{\footnote \pard\plain \s19\li120\sl-220\slmult0
\widctlpar \f5\fs20 {\cs20\super #} Topic_SaveStretchedBitmapToFile}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} SaveStretchedBitmapToFile method}}
procedure SaveStretchedBitmapToFile(bitmap: TBitmap; width, height: integer; {\lang1033 const FileName: string);
\par }\pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 The provided Bitmap is stretched to the specified width and height, and then compressed to a JPEG and written out to the file "FileName".
\par Note that the image processing is carried out at the current screen resolution. In order to get the best results, you should set your display adapter to the best resolution and colour depth supported by your display adapter/monitor.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} SaveStretchedPictureToFile}#{\footnote \pard\plain \s19\li120\sl-220\slmult0
\widctlpar \f5\fs20 {\cs20\super #} Topic_SaveStretchedPictureToFile}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} SaveStretchedPictureToFile method}}
procedure SaveStretchedPictureToFile(Picture: TPicture; width, height: integer; const FileName: string);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 Provided that the Picture holds a Bitmap or a Metafile image, it will be stretched to the specified width and height, and then compressed to a JPEG and written out to the file "FileName".
\par Note that the image processing is carried out at the current screen resolution. In order to get the best results, you should set your display adapter to the best resolution and colour depth supported by your display adapter/monitor.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} SaveMetafileToFile}#{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar 
\f5\fs20 {\cs20\super #} Topic_SaveMetafileToFile}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} SaveMetafileToFile method}}
procedure SaveMetafileToFile(metafile: TMetafile; width, height: integer; const FileName: string);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 The metafile is compressed to a JPEG and written out to the file "FileName". Note that the height and width of the required image (in pixels) must also be provided.
\par Note that the image processing is carried out at the current screen resolution. In order to get the best results, you should set your display adapter to the best resolution and colour depth supported by your display adapter/monitor.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} SaveBitmapToFile}#{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar 
\f5\fs20 {\cs20\super #} Topic_SaveBitmapToFile}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} SaveBitmapToFile Method}}procedure SaveBitmapToFile(bitmap: TBitmap; const FileName: string);
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 {\lang2057 Class: }{\uldb\lang2057 TJPEGFileCompressor}{\v\cf13\lang2057 Topic_TJPEGFileCompressor}{\lang2057 
\par }\pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 The provided Bitmap is compressed to a JPEG and written out to the file "FileName".
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} Resize}#{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {
\cs20\super #} Topic_ResizeBitmap}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} ReSizeBitmap Utility function}} function ReSizeBitmap(bitmap: TBitmap; width, height: integer): TBitmap;
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 
ReSizeBitmap is a utility function to resize a bitmap. The bitmap is copied  to a new TBitmap object and resized to the specified width and height using the Windows StretchBlt API function, and returned as the function result. 
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} MetaToBitmap}#{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {
\cs20\super #} Topic_MetaToBitmap}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} MetaToBitmap Utility Function}} function MetaToBitmap(metafile: TMetaFile; Width, Height: longint): TBitmap;
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 MetaFileToBitmap is a utility function that renders a metafile using the current display device and returns the result as a bitmap with the specified width and height.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} CropBitmap}#{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {
\cs20\super #} Topic_CropBitmap}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} CropBitmap Utility Function}} function CropBitmap(bitmap: TBitmap; width, height: integer; Clip: TRect): TBitmap;
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 CropBitmap is a utility function that is used to copy a portion of an existing bitmap (given by the rectangle "Clip" to a new bitmap returned as the result of the function. The newly created bi
tmap can also be resized. "width and "height" specify the width and height of the new bitmap. If the bitmap is to be the same size as the Clip, then widh should be set to Clip.Right-Clip.Left and height to Clip.Bottom-Clip.Top.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} AutoDisplay Property}#{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar 
\f5\fs20 {\cs20\super #} Topic_AutoDisplay}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} AutoDisplay Property}} property AutoDisplay: boolean read FAutoDisplay write FAutoDisplay default true;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 Class : {\uldb TDBJPEGImage}{\v\cf13 Topic_TDBJPEGImage}
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 If AutoDisplay is True (the default value), the image automatically displays new data when th
e underlying BLOB field changes (such as when moving to a new record). If AutoDisplay is False, the image clears whenever the underlying BLOB field changes. To display the data, the user can double-click on the control or select it and press Enter. In add
ition, calling the LoadPicture method ensures that the control is showing data. Change the value of AutoDisplay to False if the automatic loading of BLOB fields seems to take too long.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} property JPEGCompressor: TJPEGFileCompressor read FJPEGCompressor wr
ite FJPEGCompressor;}#{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_JPEGCompressor}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} JPEGCompressor Property}}
property JPEGCompressor: TJPEGFileCompressor;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 Class : {\uldb TDBJPEGImage}{\v\cf13 Topic_TDBJPEGImage}
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 
By default, a JPEG Compressor component is created with default parameters. If non-default parameters are required, then a TJPEGFileCompressor component should be created with the required parameters and assigned to this property.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} property JPEGDecompressor: TJPEGFileDecompressor;}#{\footnote \pard\plain 
\s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_JPEGDecompressor}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} JPEGDecompressor Property}}property JPEGDecompressor: TJPEGFileDecompressor;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 Class : {\uldb TDBJPEGImage}{\v\cf13 Topic_TDBJPEGImage}
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 
By default, a JPEG Decompressor component is created with default parameters. If non-default parameters are required, then a TJEPGFileDecompressor component should be created with the required parameters and assigned to this property.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} property DataField: string;}#{\footnote \pard\plain \s19\li120\sl-220\slmult0
\widctlpar \f5\fs20 {\cs20\super #} Topic_DataField}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} DataField Property}}property DataField: string;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 Class : {\uldb TDBJPEGImage}{\v\cf13 Topic_TDBJPEGImage}
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 Set to the required field name (must be a Blob field).
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} property DataSource: TDataSource;}#{\footnote \pard\plain \s19\li120\sl-220\slmult0
\widctlpar \f5\fs20 {\cs20\super #} Topic_DataSource}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} DataSource Property}}property DataSource: TDataSource;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 Class : {\uldb TDBJPEGImage}{\v\cf13 Topic_TDBJPEGImage}
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 Set to the data source for the dataset.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} property ReadOnly: boolean;}#{\footnote \pard\plain \s19\li120\sl-220\slmult0
\widctlpar \f5\fs20 {\cs20\super #} Topic_ReadOnly}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} ReadOnly Property}}property ReadOnly: boolean;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 Class : {\uldb TDBJPEGImage}{\v\cf13 Topic_TDBJPEGImage}
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 When set prevents changes to the data field.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} property Field: TField;}#{\footnote \pard\plain \s19\li120\sl-220\slmult0
\widctlpar \f5\fs20 {\cs20\super #} Topic_Field}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} Field Property}}property Field: TField;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 Class : {\uldb TDBJPEGImage}{\v\cf13 Topic_TDBJPEGImage}
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 This property provides access to the field named by {\uldb DataField}{\v\cf13 Topic_DataField}.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} procedure LoadPicture;}#{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar 
\f5\fs20 {\cs20\super #} Topic_LoadPicture}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} LoadPicture Method}}procedure LoadPicture;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 Class : {\uldb TDBJPEGImage}{\v\cf13 Topic_TDBJPEGImage}
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 If the value of the {\uldb AutoDisplay}{\v Topic_AutoDisplay}
 property is False, the image of a database image control is not automatically loaded. If AutoDisplay is False, control when the image is loaded at runtime by calling LoadPicture when the image should appear in the control.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} procedure CopyToClipboard;}#{\footnote \pard\plain \s19\li120\sl-220\slmult0
\widctlpar \f5\fs20 {\cs20\super #} Topic_CopyToClipboard}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} CopyToClipboard method}}procedure CopyToClipboard;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 Class : {\uldb TDBJPEGImage}{\v\cf13 Topic_TDBJPEGImage}
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 Use CopyToClipboard to put a copy of the graphic specified by the Picture property in the Clipboard.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} procedure CutToClipboard;}#{\footnote \pard\plain \s19\li120\sl-220\slmult0
\widctlpar \f5\fs20 {\cs20\super #} Topic_CutToClipboard}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} CutToClipboard Method}}procedure CutToClipboard;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 Class : {\uldb TDBJPEGImage}{\v\cf13 Topic_TDBJPEGImage}
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 Use the CutToClipboard method to delete the image in the control when copying it to the Clipboard. CutToClipboard gives the associated field a null value.
\par \pard\plain \s128\li115\sa60\widctlpar \b\f11\fs20\cf11\lang2057 \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $} procedure PasteFromClipboard;}#{\footnote \pard\plain \s19\li120\sl-220\slmult0
\widctlpar \f5\fs20 {\cs20\super #} Topic_PasteFromClipboard}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} PasteFromClipboard Method}}procedure PasteFromClipboard;
\par \pard\plain \s3\li120\sb60\sa60\sl-240\slmult0\widctlpar \b\f5\fs20 Class : {\uldb TDBJPEGImage}{\v\cf13 Topic_TDBJPEGImage}
\par \pard\plain \s1\sb60\sl-240\slmult0\keepn\widctlpar \b\f5 Use PasteFromClipboard to set the field value to an image stored in the Clipboard. \page {\cs20\b0\super ${\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super $}
 How to make a JPEG Image into a user defined resource}#{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super #} Topic_JPEGResource}K{\footnote \pard\plain \s19\li120\sl-220\slmult0\widctlpar \f5\fs20 {\cs20\super K} Resources}}
How to make a JPEG Image into a user defined resource
\par \pard\plain \li120\sa60\sl-220\slmult0\widctlpar \f5\fs20 The methods {\uldb LoadPictureFromResource}{\v\cf13 Topic_LoadPictureFromResource} and {\uldb LoadPictureFromResID}{\v\cf13 Topic_LoadPictureFromResID}{\cf13  }
provide ways of loading a JPEG Image at run time into a TPicture from a user defined resource. (An example is provided by the Viewer Demo program\rquote s about box).
\par Such a resource is simply binary data linked into the same .exe file as the program and accessed at run-time by either a name or a numeric identifier. It is created using the command line tool BRCC.EXE (Delphi 1) or BRCC32.EXE (all other versions).
\par To create such a resource, you must first create a text file (you may use any available text editor such as Notepad), containing a line for each image that you want to make into a resource. This line will be in the form:
\par {\f11 <name> JPEG DISCARDABLE <jpegfilename>
\par }
The <name> can be any unique string (that is if you bind in multiple JPEG images, each must have a different name), and the <jpegfilename> is simply the filename and path (including extension) of the file containing the JPEG Image. Alternatively, <name> c
an be a unique number (> 256).
\par For example, if the JPEG Image is in the file \ldblquote MyImage.jpg\rdblquote  (in the current directory) and you decide to name it \ldblquote MyPhoto\rdblquote . Then this line will read:
\par {\f11 MyPhoto JPEG DISCARDABLE MyImage.jpg
\par }Save this text file in the same directory as the project .pas files and give it a name with the extension \ldblquote .rc\rdblquote  (e.g. \ldblquote MyPhoto.rc\rdblquote ). You must now compile it with Brcc or Brcc32 from the command line. E.g.
\par {\f11 BRCC32 MyImage.rc
\par }Note that the above assumes that \ldblquote MyImage.rc\rdblquote  is in the current directory and that BRCC32.EXE is in your program path. If not, then you will have to provide its path explicitly. Note this utility is installed into the Delphi\\
bin directory.
\par Once BRCC32 finishes, it will create a .res file with the same name as the .rc file (e.g. \ldblquote MyPhoto.res\rdblquote 
) in the same directory. The final step is to link the .res file into your program. This is done by putting a directive into one of your project\rquote s .pas files (typically the same one that loads the resource) i.e.
\par {\f11 \{$R MyPhoto.res\}
\par }on a line by itself (note that Delphi always puts a similar directive into your .pas files for the .dfm file).
\par All you have to do now is to compile your program and load the resource!
\par 
\par 
\par }